apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'AndResGuard'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "cn.qinguide.f5web"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 4
        versionName "1.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resConfigs "en"

        //指定EventBus加速用的Index
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [eventBusIndex: "cn.qinguide.f5web.EventBusIndex"]
            }
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        config {
            //签名文件在项目根目录下
            //KEY_ALIAS，KEY_PASSWORD，STORE_PASSWORD写在项目根目录下的gradle.properties里
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file('../F5Web')
            storePassword STORE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config//使用上面配置的签名进行打包
        }

        debug {
            minifyEnabled false
//            shrinkResources true
//            zipAlignEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config//使用上面配置的签名进行打包
        }
    }

    //greendao配置
    greendao {
        //数据库版本号，升级时进行修改
        schemaVersion 1
        daoPackage 'cn.qinguide.f5web.mvp.model.db.greendao'
        //生成的DAO，DaoMaster和DaoSession的包名。默认是实体的包名
        targetGenDir 'src/main/java' //生成源文件的路径。默认源文件目录是在build目录中的(build/generated/source/greendao)
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    andResGuard {
        // mappingFile = file("./resource_mapping.txt")
        mappingFile = null
        use7zip = true
        useSign = true
        // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
        keepRoot = false
        whiteList = [
                // for your icon
                "R.drawable.*",
        ]
        compressFilePattern = [
                "*.png",
                "*.jpg",
                "*.jpeg",
                "*.gif",
                "resources.arsc",
        ]
        sevenzip {
            artifact = 'com.tencent.mm:SevenZip:1.2.15'
            //path = "/usr/local/bin/7za"
        }

        /**
         * 可选： 如果不设置则会默认覆盖assemble输出的apk
         **/
        // finalApkBackupPath = "${project.rootDir}/final.apk"

        /**
         * 可选: 指定v1签名时生成jar文件的摘要算法
         * 默认值为“SHA-1”
         **/
        // digestalg = "SHA-256"
    }

}

dependencies {
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.android.support:cardview-v7:28.0.0'
    //Devring 基础框架
    api 'com.ljy.ring:devring:1.0.15'
    //AutoSize  自动适配屏幕
    api 'me.jessyan:autosize:0.9.5'
    //MaterialDialog
    api 'com.afollestad.material-dialogs:core:0.9.6.0'
    //WeakHandler
    api 'com.badoo.mobile:android-weak-handler:1.1'
    //FloatActionButton
    api 'com.github.clans:fab:1.6.4'
    //封装标题栏
    api 'com.wuhenzhizao:titlebar:1.1.3'
    //BaseRecyclerViewAdapterHelper
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.32'
    //expandableTextView 折叠View
    api 'com.github.MZCretin:ExpandableTextView:v1.5.1'
    //MaterialEditText
    api 'com.rengwuxian.materialedittext:library:2.1.4'
    //══════════════════════资源绑定(ButterKnife)开始══════════════════════
    api 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //用于butterknife在编译时根据注解生成相关文件
    //══════════════════════资源绑定(ButterKnife)结束══════════════════════
    //══════════════════════依赖注入(Dagger2)开始══════════════════════
    //如果你项目需要使用到dagger2，那就需要添加注解处理器的依赖
    annotationProcessor 'com.google.dagger:dagger-compiler:2.15'
    //用于dagger2在编译时根据注解生成相关文件
    //══════════════════════依赖注入(Dagger2)结束══════════════════════
    //══════════════════════事件总线(EventBus)开始══════════════════════
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.0.1'
    //用于eventbus在编译时生成加速用的Index文件
    //══════════════════════事件总线(EventBus)结束══════════════════════
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(path: ':jsDroidEditor')
}
